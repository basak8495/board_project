<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.boardproject.member.MemberDao">
	<resultMap type="com.example.boardproject.member.Member" id="memberMap">
		<result property="memberId" column="member_id"/>
		<result property="loginId" column="login_id"/>
		<result property="password" column="password"/>
		<result property="nickname" column="nickname"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phoneNumber" column="phone_number"/>
	</resultMap>
	
	<resultMap type="com.example.boardproject.member.MemberResponseDto" id="memberResponseDtoMap">
		<result property="memberId" column="member_id"/>
		<result property="loginId" column="login_id"/>
		<result property="password" column="password"/>
		<result property="nickname" column="nickname"/>
		<result property="name" column="name"/>
		<result property="email" column="email"/>
		<result property="phoneNumber" column="phone_number"/>
	</resultMap>
	
	<!-- 회원가입 -->
    <insert id="insertMember" parameterType="com.example.boardproject.member.Member">
        INSERT INTO member (login_id, password, nickname, name, email, phone_number)
        VALUES (#{loginId}, #{password}, #{nickname}, #{name}, #{email}, #{phoneNumber})
    </insert>
    
    <!-- 로그인 -->
    <select id="selectMemberById" parameterType="string" resultMap="memberMap">
        SELECT *
        FROM member
        WHERE login_id = #{loginId}
    </select>
    
    <!-- 내정보 불러오기 -->
    <select id="selectMember" resultMap="memberResponseDtoMap" parameterType="Long">
    	SELECT m.member_id, m.login_id, m.password, m.nickname, m.name, m.email, m.phone_number
    	FROM Member m
    	WHERE m.member_id = #{memberId}
    </select>
    
    <!-- 내정보 수정 -->
    <update id="updateMember" parameterType="map">
    	UPDATE Member
    	SET nickname = #{memberRequestDto.nickname}, name = #{memberRequestDto.name}, email = #{memberRequestDto.email}, phone_number = #{memberRequestDto.phoneNumber}
    	WHERE member_id = #{memberId}
    </update>
    
    <!-- 회원탈퇴 -->
    <delete id="deleteMember" parameterType="Long">
    	DELETE FROM Comment
    	WHERE board_id IN ( 
    		SELECT b.board_id
    		FROM Board b
    		WHERE b.member_id = #{memberId}
    		);
    		
    	DELETE FROM Comment
    	WHERE member_id = #{memberId};
    	
    	DELETE FROM Board
    	WHERE member_id = #{memberId};
    	
    	DELETE FROM Member_role
    	WHERE member_id = #{memberId};
    	
    	DELETE FROM Member
    	WHERE member_id = #{memberId};
    </delete>
</mapper>